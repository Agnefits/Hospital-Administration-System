<!DOCTYPE html> 
<html lang="en">
 <head> 
     <meta charset="utf-8" /> 
     <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
     <title>@ViewData["Title"] - Hospital_Administration_System_Admin</title> 
     <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> 
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"> 
     <style>
        :root {
            --primary-color: #1F2B6C;
            --secondary-color: #159EEC;
            --accent-color: #BFD2F8;
            --text-dark: #2C3E50;
        }

        body {
            background: #f8f9fa;
            min-height: 100vh;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
            width: 280px;
            height: 100vh;
            background: var(--primary-color);
            color: white;
            padding: 1.5rem;
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .sidebar-header {
            padding: 1rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            margin-bottom: 1rem;
        }

        .nav-link {
            color: rgba(255,255,255,0.8);
            padding: 0.75rem 1rem;
            margin: 0.25rem 0;
            border-radius: 8px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .nav-link:hover,
        .nav-link.active {
            background: var(--secondary-color);
            color: white;
        }

        .main-content {
            flex: 1;
            padding: 2rem;
            background: white;
            margin-left: 0;
            padding: 1rem;
        }

        @@media (max-width: 768px) {
            .sidebar {
                position: fixed;
                transform: translateX(-100%);
                width: 280px;
                height: 100vh;
            }

                .sidebar.active {
                    transform: translateX(0);
                }
        }
     </style> 
 </head> 
 <body>
    <div class="dashboard-container">
        <header> 
             <!-- Keep existing sidebar and header content --> 
             <!-- Mobile Menu Toggle -->
            <button class="btn btn-primary d-lg-none position-fixed"
                    style="z-index: 1100; top: 1rem; left: 1rem"
                    onclick="document.querySelector('.sidebar').classList.toggle('active')">
                <i class="fas fa-bars"></i>
            </button>

             <!-- Sidebar -->
             <aside class="sidebar">
                <div class="sidebar-header">
                    <h3><i class="fas fa-user-shield"></i> Admin Dashboard</h3>
			    </div>
                <nav class="nav flex-column">
                    <a class="nav-link" href="@Url.Action("Index", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Dashboard
                    </a>
                    <a class="nav-link" href="@Url.Action("Users", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Users
                    </a>
                    <a class="nav-link" href="@Url.Action("Doctors", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Doctors
                    </a>
                    <a class="nav-link" href="@Url.Action("Patients", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Patients
                    </a>
                    <a class="nav-link" href="@Url.Action("UpcomingAppointments", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Upcoming Appointments
                    </a>
                    <a class="nav-link" href="@Url.Action("Billing", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Billing
                    </a>
                    <a class="nav-link" href="@Url.Action("Logs", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Logs
                    </a>
                    <a class="nav-link" href="@Url.Action("Reports", "Admin")" onclick="loadPage(event, this)">
                        <i class="fas fa-calendar-check"></i> Reports
                    </a>
                </nav>
             </aside> 
        </header>  
        <div class="main-content" id="mainContent">
            @RenderBody()
        </div>
    </div>
     <script>
        document.addEventListener("DOMContentLoaded", function () {
            highlightActiveLink();
        });

        function toggleSidebar() {
            document.querySelector(".sidebar").classList.toggle("active");
        }

            function highlightActiveLink() {
            const navLinks = document.querySelectorAll('.nav-link');
            const currentPath = window.location.pathname.toLowerCase();

            navLinks.forEach(link => {
                const linkPath = new URL(link.href).pathname.toLowerCase();
                link.classList.toggle('active', linkPath === currentPath);
            });
        }


            async function loadPage(event, element) {
            event.preventDefault();
            try {
                const response = await fetch(element.href, {
                    headers: { 'X-Requested-With': 'XMLHttpRequest' }
                });

                const html = await response.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const content = doc.querySelector('#mainContent')?.innerHTML || html;

                document.getElementById('mainContent').innerHTML = content;
                history.pushState({}, '', element.href);
                highlightActiveLink(); // Add this here

            } catch (error) {
                console.error("Error loading page:", error);
            }
        }
        // Global error handling
        window.addEventListener('error', (event) => {
            const errorContainer = document.createElement('div');
            errorContainer.className = 'alert alert-danger';
            errorContainer.textContent = 'An error occurred: ' + event.message;
            document.body.prepend(errorContainer);
            setTimeout(() => errorContainer.remove(), 5000);
        });

        window.addEventListener('popstate', async () => {
            try {
                const response = await fetch(window.location.href, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'text/html'
                    }
                });

                const html = await response.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const content = doc.querySelector('#mainContent')?.innerHTML || html;

                document.getElementById('mainContent').innerHTML = content;
                highlightActiveLink(); // Add this here

            } catch (error) {
                console.error("Navigation error:", error);
                window.location.reload();
            }
        });

    </script>
     <script src="~/lib/jquery/dist/jquery.min.js"></script> 
     <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script> 
     <script src="~/js/site.js" asp-append-version="true"></script> 
     @await RenderSectionAsync("Scripts", required: false) 
 </body> 
 </html>

